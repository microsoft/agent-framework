# Copyright (c) Microsoft. All rights reserved.

from typing import Any, Protocol

class FilterExpression(Protocol):
    def __and__(self, other: "FilterExpression", /) -> "FilterExpression": ...
    def __rand__(self, other: "FilterExpression", /) -> "FilterExpression": ...
    def __or__(self, other: "FilterExpression", /) -> "FilterExpression": ...
    def __ror__(self, other: "FilterExpression", /) -> "FilterExpression": ...

class Tag:
    def __init__(self, name: str) -> None: ...
    # __eq__ must match object->bool in typing, so use Any for return to avoid override errors
    def __eq__(self, other: object, /) -> Any: ...
