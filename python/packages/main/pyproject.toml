[project]
name = "agent-framework"
description = "Microsoft Agent Framework for building AI Agents with Python."
authors = [{ name = "Microsoft", email = "SK-Support@microsoft.com"}]
readme = "../../README.md"
requires-python = ">=3.10"
version = "0.1.0b1"
license = {file = "../../LICENSE"}
urls.homepage = "https://learn.microsoft.com/en-us/semantic-kernel/overview/"
urls.source = "https://github.com/microsoft/agent-framework/tree/main/python"
urls.release_notes = "https://github.com/microsoft/agent-framework/releases?q=tag%3Apython-1&expanded=true"
urls.issues = "https://github.com/microsoft/agent-framework/issues"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Framework :: Pydantic :: 2",
  "Typing :: Typed",
]
dependencies = [
    "agent-framework-azure",
    "agent-framework-openai",
    "pydantic>=2.11.7",
    "typing-extensions>=4.14.0",
]

[tool.uv]
prerelease = "if-necessary-or-explicit"
dev-dependencies = [
    "pre-commit >= 3.7",
    "ruff>=0.11.8",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-xdist[psutil]>=3.8.0",
    "pytest-timeout>=2.3.1",
    "mypy>=1.16.1",
    "pyright>=1.1.402",

    #tasks
    "poethepoet>=0.36.0",
    "rich",
    "tomli",
    "tomli-w",
    "markdownify",
    # Documentation
    "myst-nb==1.1.2",
    "pydata-sphinx-theme==0.16.0",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx",
    "sphinxcontrib-apidoc",
    "autodoc_pydantic~=2.2",
    "pygments",
    "sphinxext-rediraffe",
    "opentelemetry-instrumentation-openai",
    "markdown-it-py[linkify]",
    # Documentation tooling
    "diskcache",
    "redis",
    "sphinx-autobuild",
]
environments = [
    "sys_platform == 'darwin'",
    "sys_platform == 'linux'",
    "sys_platform == 'win32'"
]

[tool.pytest.ini_options]
testpaths = 'tests'
addopts = "-ra -q -r fEX"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = []
timeout = 120

[tool.uv-dynamic-versioning]
fallback-version = "0.0.0"

[tool.ruff]
extend = "../../pyproject.toml"

[tool.pyright]
extend = "../../pyproject.toml"
exclude = ['tests']

[tool.mypy]
plugins = ['pydantic.mypy']
strict = true
python_version = "3.10"
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = false
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = true

[tool.bandit]
targets = ["agent_framework"]
exclude_dirs = ["tests"]

[tool.poe]
executor.type = "uv"
include = "../../shared_tasks.toml"

[tool.uv.build-backend]
module-name = "agent_framework"
module-root = ""
namespace = true

[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"